---
version: '2.2'
services:
  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.12
    container_name: kibana
    links:
      - elasticsearch
    ports:
      - 5601:5601

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.12
    container_name: elasticsearch
    cap_add:
      - IPC_LOCK
    volumes:
      - esdata07:/usr/share/elasticsearch/data
    ports:
      - 9200:9200

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - 2181:2181

  kafka-broker:
    image: wurstmeister/kafka
    container_name: kafka1
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_CREATE_TOPICS: "input:1:1,output:1:1,colors_topic:1:1,weblogs_stream:1:1,weblogs_tokenized_stream:1:1,weblogs_persistence_stream:1:1,weblogs_stats_stream:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper

  cassandra:
      image: cassandra:3.11.7
      container_name: cassandra
      ports:
        - "9042:9042"
      environment:
        - "MAX_HEAP_SIZE=256M"
        - "HEAP_NEWSIZE=128M"
      restart: always
      volumes:
        - ./out/cassandra_data:/var/lib/cassandra
      healthcheck:
        test: ["CMD", "cqlsh", "-u cassandra", "-p cassandra" ,"-e describe keyspaces"]
        interval: 15s
        timeout: 10s
        retries: 10

  cassandra-load-keyspace:
      container_name: cassandra-load-keyspace
      image: cassandra:3.11.7
      depends_on:
        cassandra:
          condition: service_healthy
      volumes:
        - ./cassandra/resources/cassandra_schema.cql:/schema.cql
      command: /bin/bash -c "echo loading cassandra keyspace && cqlsh cassandra -f /schema.cql"

#  logstash:
#    image: docker.elastic.co/logstash/logstash:6.8.12
#    container_name: logstash
#    links:
#      - elasticsearch
#    ports:
#      - 5601:5601
      
#  zeppelin:
#    image: apache/zeppelin:0.9.0
#    hostname: zeppelin
#    expose:
#      - "8080"
#      - "8443"
#      - "4040"
#    volumes:
#      - ./zeppelin/machinelearning:/machinelearning
#      - ./zeppelin/pyspark-notebooks:/zeppelin/notebook
#      - ./zeppelin/zeppelin-interpreters/interpreter.json:/zeppelin/conf/interpreter.json


volumes:
  esdata07:
    driver: local
